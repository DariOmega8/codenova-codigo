-- MySQL Script generated by MySQL Workbench
-- Tue Sep  2 19:01:08 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`menu` (
  `id menu` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(10) NOT NULL,
  `estado` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`id menu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`usuario` (
  `id usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `fecha de nacimiento` DATE NULL,
  `gmail` VARCHAR(100) NOT NULL,
  `contrase√±a` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id usuario`),
  UNIQUE INDEX `gmail_UNIQUE` (`gmail` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`administrador`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`administrador` (
  `id administrador` INT NOT NULL AUTO_INCREMENT,
  `ultima conexion` TIME NULL,
  `menu_id menu` INT NOT NULL,
  `usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`id administrador`, `menu_id menu`, `usuario_id usuario`),
  INDEX `fk_administrador_menu1_idx` (`menu_id menu` ASC),
  INDEX `fk_administrador_usuario1_idx` (`usuario_id usuario` ASC),
  CONSTRAINT `fk_administrador_menu1`
    FOREIGN KEY (`menu_id menu`)
    REFERENCES `mydb`.`menu` (`id menu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_administrador_usuario1`
    FOREIGN KEY (`usuario_id usuario`)
    REFERENCES `mydb`.`usuario` (`id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `id cliente` INT NOT NULL AUTO_INCREMENT,
  `nacionalidad` VARCHAR(50) NOT NULL,
  `usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`id cliente`, `usuario_id usuario`),
  UNIQUE INDEX `gmail_UNIQUE` (`nacionalidad` ASC),
  INDEX `fk_cliente_usuario1_idx` (`usuario_id usuario` ASC),
  CONSTRAINT `fk_cliente_usuario1`
    FOREIGN KEY (`usuario_id usuario`)
    REFERENCES `mydb`.`usuario` (`id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`telefono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`telefono` (
  `idtelefono` INT NOT NULL AUTO_INCREMENT,
  `telefono` VARCHAR(45) NULL,
  `cliente_id cliente` INT NOT NULL,
  `cliente_usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`idtelefono`, `cliente_id cliente`, `cliente_usuario_id usuario`),
  INDEX `fk_telefono_cliente1_idx` (`cliente_id cliente` ASC, `cliente_usuario_id usuario` ASC),
  CONSTRAINT `fk_telefono_cliente1`
    FOREIGN KEY (`cliente_id cliente` , `cliente_usuario_id usuario`)
    REFERENCES `mydb`.`cliente` (`id cliente` , `usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`empleado` (
  `id empleado` INT NOT NULL AUTO_INCREMENT,
  `estado` VARCHAR(10) NOT NULL,
  `fecha de ingreso` DATE NOT NULL,
  `usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`id empleado`, `usuario_id usuario`),
  INDEX `fk_empleado_usuario1_idx` (`usuario_id usuario` ASC),
  CONSTRAINT `fk_empleado_usuario1`
    FOREIGN KEY (`usuario_id usuario`)
    REFERENCES `mydb`.`usuario` (`id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`promocion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`promocion` (
  `id promocion` INT NOT NULL AUTO_INCREMENT,
  `condiciones` VARCHAR(10) NULL,
  `duracion` DATE NULL,
  `titulo` VARCHAR(15) NOT NULL,
  `estado` VARCHAR(10) NULL,
  `tipo` VARCHAR(15) NOT NULL,
  `descripcion` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id promocion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`reserva` (
  `id reserva` INT NOT NULL AUTO_INCREMENT,
  `hora de inicio` TIME NOT NULL,
  `estado` VARCHAR(10) NOT NULL,
  `cantidad` INT NOT NULL,
  `fecha` DATE NOT NULL,
  `cliente_id cliente` INT NOT NULL,
  `cliente_usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`id reserva`, `cliente_id cliente`, `cliente_usuario_id usuario`),
  INDEX `fk_reserva_cliente1_idx` (`cliente_id cliente` ASC, `cliente_usuario_id usuario` ASC),
  CONSTRAINT `fk_reserva_cliente1`
    FOREIGN KEY (`cliente_id cliente` , `cliente_usuario_id usuario`)
    REFERENCES `mydb`.`cliente` (`id cliente` , `usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`mesa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mesa` (
  `id mesa` INT NOT NULL AUTO_INCREMENT,
  `capacidad` INT NOT NULL,
  `numero` INT NOT NULL,
  `estado` VARCHAR(15) NOT NULL,
  `fecha de asignacion` DATE NOT NULL,
  `cliente_id cliente` INT NOT NULL,
  `cliente_usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`id mesa`, `cliente_id cliente`, `cliente_usuario_id usuario`),
  INDEX `fk_mesa_cliente1_idx` (`cliente_id cliente` ASC, `cliente_usuario_id usuario` ASC),
  CONSTRAINT `fk_mesa_cliente1`
    FOREIGN KEY (`cliente_id cliente` , `cliente_usuario_id usuario`)
    REFERENCES `mydb`.`cliente` (`id cliente` , `usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pedido` (
  `id pedido` INT NOT NULL AUTO_INCREMENT,
  `estado` VARCHAR(15) NOT NULL,
  `fecha` DATE NOT NULL,
  PRIMARY KEY (`id pedido`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`platos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`platos` (
  `id platos` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(25) NOT NULL,
  `descripcion` VARCHAR(50) NOT NULL,
  `precio` DECIMAL(10) NOT NULL,
  `menu_id menu` INT NOT NULL,
  PRIMARY KEY (`id platos`, `menu_id menu`),
  INDEX `fk_platos_menu1_idx` (`menu_id menu` ASC),
  CONSTRAINT `fk_platos_menu1`
    FOREIGN KEY (`menu_id menu`)
    REFERENCES `mydb`.`menu` (`id menu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_has_platos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pedido_has_platos` (
  `pedido_id pedido` INT NOT NULL,
  `platos_id platos` INT NOT NULL,
  PRIMARY KEY (`pedido_id pedido`, `platos_id platos`),
  INDEX `fk_pedido_has_platos_platos1_idx` (`platos_id platos` ASC),
  INDEX `fk_pedido_has_platos_pedido1_idx` (`pedido_id pedido` ASC),
  CONSTRAINT `fk_pedido_has_platos_pedido1`
    FOREIGN KEY (`pedido_id pedido`)
    REFERENCES `mydb`.`pedido` (`id pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_platos_platos1`
    FOREIGN KEY (`platos_id platos`)
    REFERENCES `mydb`.`platos` (`id platos`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`stock` (
  `id stock` INT NOT NULL AUTO_INCREMENT,
  `unidad de medida` VARCHAR(45) NULL,
  `cantidad total` INT NULL,
  `ultima actualizacion` DATE NULL,
  PRIMARY KEY (`id stock`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`producto` (
  `id producto` INT NOT NULL AUTO_INCREMENT,
  `cantidad` INT NOT NULL,
  `nombre` VARCHAR(15) NOT NULL,
  `precio` INT NOT NULL,
  `tipo de producto` VARCHAR(15) NULL,
  `stock_id stock` INT NOT NULL,
  PRIMARY KEY (`id producto`, `stock_id stock`),
  INDEX `fk_producto_stock1_idx` (`stock_id stock` ASC),
  CONSTRAINT `fk_producto_stock1`
    FOREIGN KEY (`stock_id stock`)
    REFERENCES `mydb`.`stock` (`id stock`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`administrador_has_stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`administrador_has_stock` (
  `administrador_id administrador` INT NOT NULL,
  `administrador_menu_id menu` INT NOT NULL,
  `stock_id stock` INT NOT NULL,
  PRIMARY KEY (`administrador_id administrador`, `administrador_menu_id menu`, `stock_id stock`),
  INDEX `fk_administrador_has_stock_stock1_idx` (`stock_id stock` ASC),
  INDEX `fk_administrador_has_stock_administrador1_idx` (`administrador_id administrador` ASC, `administrador_menu_id menu` ASC),
  CONSTRAINT `fk_administrador_has_stock_administrador1`
    FOREIGN KEY (`administrador_id administrador` , `administrador_menu_id menu`)
    REFERENCES `mydb`.`administrador` (`id administrador` , `menu_id menu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_administrador_has_stock_stock1`
    FOREIGN KEY (`stock_id stock`)
    REFERENCES `mydb`.`stock` (`id stock`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`historial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`historial` (
  `numero de historial` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  `tipo de movimiento` VARCHAR(15) NULL,
  `cantidad` INT NULL,
  `fecha` DATE NULL,
  `stock_id stock` INT NOT NULL,
  PRIMARY KEY (`numero de historial`, `stock_id stock`),
  INDEX `fk_historial_stock1_idx` (`stock_id stock` ASC),
  CONSTRAINT `fk_historial_stock1`
    FOREIGN KEY (`stock_id stock`)
    REFERENCES `mydb`.`stock` (`id stock`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`registro de visita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`registro de visita` (
  `id visita` INT NOT NULL AUTO_INCREMENT,
  `fecha hora` DATETIME(3) NULL,
  `cantidad` INT NULL,
  PRIMARY KEY (`id visita`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estadistica de venta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estadistica de venta` (
  `estadistica id` INT NOT NULL AUTO_INCREMENT,
  `tipo de estadistica` VARCHAR(30) NULL,
  `tiempo` VARCHAR(45) NULL,
  PRIMARY KEY (`estadistica id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`mesa_has_empleado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mesa_has_empleado` (
  `mesa_id mesa` INT NOT NULL,
  `mesa_cliente_id cliente` INT NOT NULL,
  `mesa_cliente_usuario_id usuario` INT NOT NULL,
  `empleado_id empleado` INT NOT NULL,
  `empleado_usuario_id usuario` INT NOT NULL,
  PRIMARY KEY (`mesa_id mesa`, `mesa_cliente_id cliente`, `mesa_cliente_usuario_id usuario`, `empleado_id empleado`, `empleado_usuario_id usuario`),
  INDEX `fk_mesa_has_empleado_empleado1_idx` (`empleado_id empleado` ASC, `empleado_usuario_id usuario` ASC),
  INDEX `fk_mesa_has_empleado_mesa1_idx` (`mesa_id mesa` ASC, `mesa_cliente_id cliente` ASC, `mesa_cliente_usuario_id usuario` ASC),
  CONSTRAINT `fk_mesa_has_empleado_mesa1`
    FOREIGN KEY (`mesa_id mesa` , `mesa_cliente_id cliente` , `mesa_cliente_usuario_id usuario`)
    REFERENCES `mydb`.`mesa` (`id mesa` , `cliente_id cliente` , `cliente_usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mesa_has_empleado_empleado1`
    FOREIGN KEY (`empleado_id empleado` , `empleado_usuario_id usuario`)
    REFERENCES `mydb`.`empleado` (`id empleado` , `usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cliente_has_promocion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cliente_has_promocion` (
  `cliente_id cliente` INT NOT NULL,
  `cliente_usuario_id usuario` INT NOT NULL,
  `promocion_id promocion` INT NOT NULL,
  PRIMARY KEY (`cliente_id cliente`, `cliente_usuario_id usuario`, `promocion_id promocion`),
  INDEX `fk_cliente_has_promocion_promocion1_idx` (`promocion_id promocion` ASC),
  INDEX `fk_cliente_has_promocion_cliente1_idx` (`cliente_id cliente` ASC, `cliente_usuario_id usuario` ASC),
  CONSTRAINT `fk_cliente_has_promocion_cliente1`
    FOREIGN KEY (`cliente_id cliente` , `cliente_usuario_id usuario`)
    REFERENCES `mydb`.`cliente` (`id cliente` , `usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cliente_has_promocion_promocion1`
    FOREIGN KEY (`promocion_id promocion`)
    REFERENCES `mydb`.`promocion` (`id promocion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`mesa_has_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`mesa_has_pedido` (
  `mesa_id mesa` INT NOT NULL,
  `mesa_cliente_id cliente` INT NOT NULL,
  `mesa_cliente_usuario_id usuario` INT NOT NULL,
  `pedido_id pedido` INT NOT NULL,
  PRIMARY KEY (`mesa_id mesa`, `mesa_cliente_id cliente`, `mesa_cliente_usuario_id usuario`, `pedido_id pedido`),
  INDEX `fk_mesa_has_pedido_pedido1_idx` (`pedido_id pedido` ASC),
  INDEX `fk_mesa_has_pedido_mesa1_idx` (`mesa_id mesa` ASC, `mesa_cliente_id cliente` ASC, `mesa_cliente_usuario_id usuario` ASC),
  CONSTRAINT `fk_mesa_has_pedido_mesa1`
    FOREIGN KEY (`mesa_id mesa` , `mesa_cliente_id cliente` , `mesa_cliente_usuario_id usuario`)
    REFERENCES `mydb`.`mesa` (`id mesa` , `cliente_id cliente` , `cliente_usuario_id usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mesa_has_pedido_pedido1`
    FOREIGN KEY (`pedido_id pedido`)
    REFERENCES `mydb`.`pedido` (`id pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
